#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Project_Task_Two.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="MahasiswaDB")]
	public partial class MHSDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTmahasiswa(Tmahasiswa instance);
    partial void UpdateTmahasiswa(Tmahasiswa instance);
    partial void DeleteTmahasiswa(Tmahasiswa instance);
    partial void InsertTnilai(Tnilai instance);
    partial void UpdateTnilai(Tnilai instance);
    partial void DeleteTnilai(Tnilai instance);
    #endregion
		
		public MHSDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["MahasiswaDBConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MHSDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MHSDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MHSDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MHSDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Tmahasiswa> Tmahasiswas
		{
			get
			{
				return this.GetTable<Tmahasiswa>();
			}
		}
		
		public System.Data.Linq.Table<Tnilai> Tnilais
		{
			get
			{
				return this.GetTable<Tnilai>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tmahasiswa")]
	public partial class Tmahasiswa : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NRP;
		
		private string _Nama;
		
		private string _Fakultas;
		
		private string _Jurusan;
		
		private EntitySet<Tnilai> _Tnilais;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNRPChanging(int value);
    partial void OnNRPChanged();
    partial void OnNamaChanging(string value);
    partial void OnNamaChanged();
    partial void OnFakultasChanging(string value);
    partial void OnFakultasChanged();
    partial void OnJurusanChanging(string value);
    partial void OnJurusanChanged();
    #endregion
		
		public Tmahasiswa()
		{
			this._Tnilais = new EntitySet<Tnilai>(new Action<Tnilai>(this.attach_Tnilais), new Action<Tnilai>(this.detach_Tnilais));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NRP", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NRP
		{
			get
			{
				return this._NRP;
			}
			set
			{
				if ((this._NRP != value))
				{
					this.OnNRPChanging(value);
					this.SendPropertyChanging();
					this._NRP = value;
					this.SendPropertyChanged("NRP");
					this.OnNRPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nama", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nama
		{
			get
			{
				return this._Nama;
			}
			set
			{
				if ((this._Nama != value))
				{
					this.OnNamaChanging(value);
					this.SendPropertyChanging();
					this._Nama = value;
					this.SendPropertyChanged("Nama");
					this.OnNamaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fakultas", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Fakultas
		{
			get
			{
				return this._Fakultas;
			}
			set
			{
				if ((this._Fakultas != value))
				{
					this.OnFakultasChanging(value);
					this.SendPropertyChanging();
					this._Fakultas = value;
					this.SendPropertyChanged("Fakultas");
					this.OnFakultasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Jurusan", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Jurusan
		{
			get
			{
				return this._Jurusan;
			}
			set
			{
				if ((this._Jurusan != value))
				{
					this.OnJurusanChanging(value);
					this.SendPropertyChanging();
					this._Jurusan = value;
					this.SendPropertyChanged("Jurusan");
					this.OnJurusanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tmahasiswa_Tnilai", Storage="_Tnilais", ThisKey="NRP", OtherKey="NRP")]
		public EntitySet<Tnilai> Tnilais
		{
			get
			{
				return this._Tnilais;
			}
			set
			{
				this._Tnilais.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tnilais(Tnilai entity)
		{
			this.SendPropertyChanging();
			entity.Tmahasiswa = this;
		}
		
		private void detach_Tnilais(Tnilai entity)
		{
			this.SendPropertyChanging();
			entity.Tmahasiswa = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tnilai")]
	public partial class Tnilai : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _KodeMK;
		
		private string _MataKuliah;
		
		private string _Nilai;
		
		private int _NRP;
		
		private EntityRef<Tmahasiswa> _Tmahasiswa;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKodeMKChanging(int value);
    partial void OnKodeMKChanged();
    partial void OnMataKuliahChanging(string value);
    partial void OnMataKuliahChanged();
    partial void OnNilaiChanging(string value);
    partial void OnNilaiChanged();
    partial void OnNRPChanging(int value);
    partial void OnNRPChanged();
    #endregion
		
		public Tnilai()
		{
			this._Tmahasiswa = default(EntityRef<Tmahasiswa>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KodeMK", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int KodeMK
		{
			get
			{
				return this._KodeMK;
			}
			set
			{
				if ((this._KodeMK != value))
				{
					this.OnKodeMKChanging(value);
					this.SendPropertyChanging();
					this._KodeMK = value;
					this.SendPropertyChanged("KodeMK");
					this.OnKodeMKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MataKuliah", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MataKuliah
		{
			get
			{
				return this._MataKuliah;
			}
			set
			{
				if ((this._MataKuliah != value))
				{
					this.OnMataKuliahChanging(value);
					this.SendPropertyChanging();
					this._MataKuliah = value;
					this.SendPropertyChanged("MataKuliah");
					this.OnMataKuliahChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nilai", DbType="NVarChar(2) NOT NULL", CanBeNull=false)]
		public string Nilai
		{
			get
			{
				return this._Nilai;
			}
			set
			{
				if ((this._Nilai != value))
				{
					this.OnNilaiChanging(value);
					this.SendPropertyChanging();
					this._Nilai = value;
					this.SendPropertyChanged("Nilai");
					this.OnNilaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NRP", DbType="Int NOT NULL")]
		public int NRP
		{
			get
			{
				return this._NRP;
			}
			set
			{
				if ((this._NRP != value))
				{
					if (this._Tmahasiswa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNRPChanging(value);
					this.SendPropertyChanging();
					this._NRP = value;
					this.SendPropertyChanged("NRP");
					this.OnNRPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tmahasiswa_Tnilai", Storage="_Tmahasiswa", ThisKey="NRP", OtherKey="NRP", IsForeignKey=true)]
		public Tmahasiswa Tmahasiswa
		{
			get
			{
				return this._Tmahasiswa.Entity;
			}
			set
			{
				Tmahasiswa previousValue = this._Tmahasiswa.Entity;
				if (((previousValue != value) 
							|| (this._Tmahasiswa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tmahasiswa.Entity = null;
						previousValue.Tnilais.Remove(this);
					}
					this._Tmahasiswa.Entity = value;
					if ((value != null))
					{
						value.Tnilais.Add(this);
						this._NRP = value.NRP;
					}
					else
					{
						this._NRP = default(int);
					}
					this.SendPropertyChanged("Tmahasiswa");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
